/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppSettingsRouteImport } from './routes/app/settings'
import { Route as AppChartsRouteImport } from './routes/app/charts'
import { Route as AppYearMonthRouteImport } from './routes/app/$year/$month'
import { ServerRoute as CustomScriptDotjsServerRouteImport } from './routes/customScript[.]js'

const rootServerRouteImport = createServerRootRoute()

const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppChartsRoute = AppChartsRouteImport.update({
  id: '/charts',
  path: '/charts',
  getParentRoute: () => AppRoute,
} as any)
const AppYearMonthRoute = AppYearMonthRouteImport.update({
  id: '/$year/$month',
  path: '/$year/$month',
  getParentRoute: () => AppRoute,
} as any)
const CustomScriptDotjsServerRoute = CustomScriptDotjsServerRouteImport.update({
  id: '/customScript.js',
  path: '/customScript.js',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/charts': typeof AppChartsRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/$year/$month': typeof AppYearMonthRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/charts': typeof AppChartsRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/$year/$month': typeof AppYearMonthRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/charts': typeof AppChartsRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/$year/$month': typeof AppYearMonthRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/charts'
    | '/app/settings'
    | '/app/$year/$month'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/app' | '/app/charts' | '/app/settings' | '/app/$year/$month'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/charts'
    | '/app/settings'
    | '/app/$year/$month'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/customScript.js': typeof CustomScriptDotjsServerRoute
}
export interface FileServerRoutesByTo {
  '/customScript.js': typeof CustomScriptDotjsServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/customScript.js': typeof CustomScriptDotjsServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/customScript.js'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/customScript.js'
  id: '__root__' | '/customScript.js'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  CustomScriptDotjsServerRoute: typeof CustomScriptDotjsServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/settings': {
      id: '/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/charts': {
      id: '/app/charts'
      path: '/charts'
      fullPath: '/app/charts'
      preLoaderRoute: typeof AppChartsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/$year/$month': {
      id: '/app/$year/$month'
      path: '/$year/$month'
      fullPath: '/app/$year/$month'
      preLoaderRoute: typeof AppYearMonthRouteImport
      parentRoute: typeof AppRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/customScript.js': {
      id: '/customScript.js'
      path: '/customScript.js'
      fullPath: '/customScript.js'
      preLoaderRoute: typeof CustomScriptDotjsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AppRouteChildren {
  AppChartsRoute: typeof AppChartsRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppYearMonthRoute: typeof AppYearMonthRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppChartsRoute: AppChartsRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppYearMonthRoute: AppYearMonthRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  CustomScriptDotjsServerRoute: CustomScriptDotjsServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
